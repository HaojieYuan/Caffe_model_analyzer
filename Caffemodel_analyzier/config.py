# This is the congiguration file of caffe model anaylize
# To make this work, you have to offer following information
#   1. caffe python interface folder
#   2. Whether you want to run this in GPU or not
#   3. Your trained model file (weights file, I mean.)
#   4. Deploy version layer structure file
#   5. Npy mean file (binaryproto is also ok, but remember set bin2npy to True)
#   6. Input image reshape configuration
#   7. Test image file path and labels
#
# Enjoy ~ ~


# We need caffe's python interface to make prediction
# Usually it's Caffe_root_path/python
# If you can't find this directory, try "make pycaffe"
pycaffe_path = '/home/s2009285/caffe/caffe-master/python/'

# For validation usually a CPU is enough
# So CPU mode is default
# Of course you can use GPU instead
use_GPU = False
GPU_device = 0,1


# Here we need your pretrained model file, deploy net structure
# and a npy mean file. If you only have a binaryproto file, set
# the bin2npy option True.

# Model file always have a suffix of .caffemodel
Model_file = '/home/s2009285/caffe/caffe-master/training/1000:3000/caffenet_1000to3000_iter_20000.caffemodel'
# Deploy net structre, usually change your train model
# structure file to accept input and remove all layer related
# to label will work fine.
deploy_net = '/home/s2009285/caffe/caffe-master/training/1000:3000/deploy.prototxt'
# Change binaryproto into npy
bin2npy = False
Mean_file = '/home/s2009285/caffe/caffe-master/training/1000:3000/gen_mean.npy'


# Image reshape options, set it same as image input when training
image_batch = 1
reshape_channel = 3
reshape_height = 227
reshape_width = 227


# Sepcify image path, labels and amounts for test.
# Dont't set aount over image number you have,
# or there will be an error message.
# This is for those who don't have generated list file.
# Set use_raw_image to True and list will be generated 
# by the name you specified.
# The generated list file can be used directly next time.
use_raw_image = False
class_number = 2
class_name = ['blot', 'other']
image_amount = [100, 100]
_label = [0, 1]
image_path = ['/home/haojie/data/test_data/blot',
         '/home/haojie/data/test_data/other']
generated_list_file = 'gen_list.txt'

# If you already have a list file, sepcify it here.
# List file can be generated by one of my repository
# Take a look at lmdb-file-list-builder on github.
# If you are going to use a list already exist,
# remeber to set use_raw_image to False
list_file = '/home/s2009285/test_data/list.txt'
